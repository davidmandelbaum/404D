data <- read.csv("/Users/david/Downloads/reporter-data.csv")
data <- read.csv("/Users/david/Downloads/reporter-export.csv", header=T, sep=",")
attach(data)
data
head(data)
install.packages("ggplot2")
library("ggplot2", lib.loc="/Users/david/Library/R/2.15/library")
ggplot2(data)
qplot(Latitude, Longitude)
install.packages(c("maps", "mapdata"))
library(maps)
library(mapdata)
map("bla", "United States")
map("worldHires", "United States")
map("worldHires", "Canada")
map("worldHires", "usa")
points(Latitude, Longitude)
Latitude
Longitude
plot(Latitude, Longitude)
map("worldHires", "usa")
map()
map('country', 'newyork')
map('country', 'iowa')
map('county', 'iowa')
map('county', 'new york')
points(Latitude, Longitude)
map('county', 'connecticut')
points(Latitude, Longitude)
map()
points(Latitude, Longitude)
ls
pwd
help
help()
ls()
dat
data
hist()
attach(data)
hist(What.s.your.mood.)
hist(Number.of.Steps)
hist(Number.of.Steps, col=BLUE)
hist(Number.of.Steps, breaks=10)
mosaic()
install.packages("mosaic")
library("mosaic", lib.loc="/Users/david/Library/R/2.15/library")
library(help='Hmisc')
library("neuralnet", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
txtProgressBar(min = 0, max = 1)
pb <- txtProgressBar(min = 0, max = 1)
pb
plot(pb)
pb <- txtProgressBar(min = 0, max = 1, initial = .5, char = "=", width = NA, title, label, style = 1, file = "")
testit <- function(x = sort(runif(20)), ...){}
testit <- function(x = sort(runif(20)), ...){
pb <- txtProgressBar(min = 0, max = 1, char = "~", title, label, style = 1, file = "")
for(i in c(0, x, 1)) {Sys.sleep(0.5); setTxtProgressBar(pb, i)}
Sys.sleep(1)
close(pb)
}
testit()
testit <- function(x = sort(runif(20))){
pb <- txtProgressBar(min = 0, max = 1, char = "~", title, label, style = 1, file = "")
for(i in c(0, x, 1)) {Sys.sleep(0.5); setTxtProgressBar(pb, i)}
Sys.sleep(1)
close(pb)
}
testit()
demo()
Hershey
error.catching
Japanese
Hershey
graphics
image
persp
plotmath
reporter.export.2 <- read.csv("~/Downloads/reporter-export-2.csv")
View(reporter.export.2)
attach(reporter.export.2)
plot(How.much.did.you.sleep.)
plot(How.much.did.you.sleep., How.many.coffees.did.you.have.today.)
plot(How.much.did.you.sleep.~How.many.coffees.did.you.have.today.)
plot(How.many.coffees.did.you.have.today.)
par(New=T)
par(new=T)
plot(How.much.did.you.sleep.)
lines()
par(new=f)
par(new=F)
lines()
lines(How.much.did.you.sleep.)
plot(Latitude~Longitude)
Latitude
reporter.export.2 <- read.csv("~/Downloads/reporter-export-2.csv")
View(reporter.export.2)
attach(reporter.export.2)
Latitude
head(Latitude)
plot(Latitude, Longitude)
plot(Latitude~Longitude)
plot(Latitude, Longitude)
library("ggplot2", lib.loc="/Users/david/Library/R/2.15/library")
ggplot2(Latitude, Longitude)
ggplot(Latitude, Longitude)
qplot(Latitude, Longitude)
reporter.export.3 <- read.csv("~/Downloads/reporter-export-3.csv")
View(reporter.export.3)
attach(reporter.export.3)
How.much.did.you.sleep.
stat.desc(How.much.did.you.sleep.)
attach(reporter.export.3)
attach(reporter.export.3)
reporter.export.3 <- read.csv("~/Downloads/reporter-export-3.csv")
View(reporter.export.3)
attach(reporter.export.3)
summary(How.much.did.you.sleep.)
summary(What.s.your.mood.)
plot(How.many.coffees.did.you.have.today.)
plot(How.much.did.you.sleep.
plot(How.much.did.you.sleep.)
plot(How.much.did.you.sleep.)
plot(How.much.did.you.sleep., How.many.coffees.did.you.have.today.)
summary(Who.are.you.with.)
library("ggplot2", lib.loc="/Users/david/Library/R/2.15/library")
ggplot(reporter.export.3, aes(Timestamp.of.Report..Local.Time.))
ggplot(reporter.export.3, aes(Timestamp.of.Report..Local.Time.)) + geom_line(aes(y = How.many.coffees.did.you.have.today., colour="var0")) + geom_line(aes(y = How.much.did.you.sleep., colour="var1"))
plot(mat, How.many.coffees.did.you.have.today.)
y1 <- pnorm(How.many.coffees.did.you.have.today.)
y2 <- pnorm(How.much.did.you.sleep.)
df <- data.frame(y1, y2)
ggplot(df)
plot(How.much.did.you.sleep.)
par(new=TRUE)
plot(How.many.coffees.did.you.have.today.)
lines(How.much.did.you.sleep.)
plot(How.much.did.you.sleep.)
plot(How.much.did.you.sleep., type="o", col="blue")
How.much.did.you.sleep. <- How.much.did.you.sleep.[!is.na(How.much.did.you.sleep.)]
How.many.coffees.did.you.have.today. <- How.many.coffees.did.you.have.today.[!is.na(How.many.coffees.did.you.have.today.)]
plot(How.much.did.you.sleep., type="o", col="blue")
par(new=TRUE)
plot(How.many.coffees.did.you.have.today., type="o", col="red")
plot(How.much.did.you.sleep., type="o", col="blue")
par(new=TRUE)
plot(How.many.coffees.did.you.have.today., type="o", col="red")
packages.install("swirl")
install.packages("swirl")
library("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
library("swirl")
swirl()
5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
mySqrt <- sqrt(z-1)
mySqrt
myDiv <- z / mySqrt
myDiv
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
1:20
pi:10
15:1
?:
?`:`
seq(1,20)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along()
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times=10)
rep(c(0,1,2),each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse= " ")
c(my_char, "David")
my_name <- c(my_char, "David")
my_name
paste(my_name, collapse= " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"))
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep = "-")
exit()
bye()
swirl()
10
25
reporter.export.3 <- read.csv("~/Downloads/reporter-export-3.csv")
View(reporter.export.3)
attach(reporter.export.3)
describe(How.much.did.you.sleep.)
How.much.did.you.sleep.
summary(How.much.did.you.sleep.)
plot(How.much.did.you.sleep.)
plot(How.much.did.you.sleep., xaxt=5)
plot(How.much.did.you.sleep.)
reporter.export.3
final(reporter.export.3)
complete.cases(How.much.did.you.sleep.)
How.much.did.you.sleep.[complete.cases(How.much.did.you.sleep.)]
Timestamp.of.Report..GMT.[complete.cases(How.much.did.you.sleep.)]
dates <- as.Date(Timestamp.of.Report..Local.Time.)
as.POSIXlt(Timestamp.of.Report..Local.Time.)
summary(Timestamp.of.Report..Local.Time.)
sleep <- How.much.did.you.sleep.[complete.cases(How.much.did.you.sleep.)]
dates <- Timestamp.of.Report..Local.Time.[complete.cases(How.much.did.you.sleep.)]
dates
plot(sleep, dates)
plot(dates, sleep)
coffee <- How.many.coffees.did.you.have.today.[complete.cases(How.many.coffees.did.you.have.today.)]
par(new=TRUE)
plot(dates, coffee)
plot(dates, coffee, col="blue")
plot(dates, coffee, col="blue", pch=24)
plot(dates, coffee, type="l")
plot(dates, sleep)
plot(dates, sleep, type = "h")
plot.new()
plot.window()
plot.window(xlim=c(min(Timestamp.of.Report..Local.Time.), max(Timestamp.of.Report..Local.Time.)), ylim=c(min(How.much.did.you.sleep.), max(How.much.did.you.sleep.)))
min(How.much.did.you.sleep.)
min(Timestamp.of.Report..Local.Time.)
plot.window(xlim=c(Timestamp.of.Report..Local.Time.[1], Timestamp.of.Report..Local.Time.[158]), ylim=c(0, 12)
)
abline(a=6, b=3)
plot.window(xlim=c(0, 10), ylim=c(0, 10))
par(new=FALSE)
plot.new()
plot.window(xlim=c(0, 10), ylim=c(0, 10))
plot.new()
plot.window(xlim=c(0, 10), ylim=c(0, 10))
abline(a=6, b=3)
axis(1)
axis(2)
points(dates, sleep)
plot(dates, sleep, col="blue")
plot(dates, sleep, col=par("blue"))
plot(dates, sleep, cex= 5)
plot(sleep, cex=5)
plot(dates, sleep, cex= 5)
plot(dates, sleep, cex= 5, type="l")
lines(sleep)
lines(sleep, dates)
lines(dates, sleep)
plot(dates, sleep)
par(new=TRUE)
plot(dates, coffee)
lines(dates, sleep, col="blue")
lines(dates, sleep)
lines(dates, coffee)
plot(dates, sleep)
lines(dates, sleep)
lines(dates, coffee)
lines(dates, sleep)
plot.new()
lines(dates, sleep, col="blue")
plot(dates, sleep)
lines(dates, sleep, col="blue")
lines(dates, coffee, col="red")
happy <- What.s.your.mood.[co]
cor(How.much.did.you.sleep., How.many.coffees.did.you.have.today.)
coffee <- How.many.coffees.did.you.have.today.[complete.cases(How.many.coffees.did.you.have.today.)]
cor(sleep, coffee)
install.packages("XML")
data = read.csv("~/Dropbox/Yale University/MENG 404 - Medical Device Design/QCPR/out.csv")
data
library("car")
install.package("car")
install.packages("car")
library("car")
scatterplotMatrix(data)
scatterplotMatrix(data[2:6])
cov(data)
score = start # try 20 mmHg to start with
source('~/Dropbox/Yale University/MENG 404 - Medical Device Design/app/capno.R')
source('~/.active-rstudio-document')
capscore(baxter, 1500)
